name: 1.0$(rev:.r) # build numbering format

resources:
- repo: self
phases:
- phase: Phase_1
  displayName: Agent job 1

  condition: succeeded()
  queue:
    name: Hosted VS2017
  variables:
    BuildConfiguration: 'Release'
  steps:
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore

      projects: '**/*.csproj'

      vstsFeed: '3c2d9c9a-d8f7-42f4-b7a3-dddf4064110a'


  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: '**/*.csproj'

      arguments: '/p:TreatWarningsAsErrors="true" --configuration $(BuildConfiguration)'


  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test

      projects: '**/*Tests/*.csproj'

      arguments: '--configuration $(BuildConfiguration)'


  - task: DotNetCoreCLI@2
    displayName: Pack
    inputs:
      command: pack

      packagesToPack: '**/Application/*.csproj'

      versioningScheme: byBuildNumber


  - task: DotNetCoreCLI@2
    displayName: 'NuGet Push'
    inputs:
      command: push

      publishVstsFeed: '3c2d9c9a-d8f7-42f4-b7a3-dddf4064110a'



- phase: Phase_2
  displayName: Create Release Work Item

  dependsOn: Phase_1
  condition: succeeded()
  server: true
  variables:
    ParentWorkItemId: '236'
  steps:
  - task: AzureFunction@1
    displayName: 'Create Release Work Item'
    inputs:
      function: 'https://tfsreleasemanagementsystem.azurewebsites.net/api/CreateRelease'

      key: 'KCw8zHoDdJ2lGj2VzaHCaywIVZTGyT8MldAkAlcdFb63V9ephxuA1A=='

      headers: |  
       {
       "Content-Type":"application/json"
       }

      body: |  
       {
           "buildId": $(Build.BuildId),
           "buildVersion": "$(Build.BuildNumber)",
           "parentWorkItemId": $(ParentWorkItemId)
       }

